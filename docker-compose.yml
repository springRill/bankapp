services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev", "--import-realm"]
    ports:
      - "8089:8080"
    volumes:
      - ./keycloak/realms/bank-realm.json:/opt/keycloak/data/import/bank-realm.json
    healthcheck:
      test: ["CMD-SHELL", "echo > /dev/tcp/localhost/8080"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  consul:
    image: hashicorp/consul:latest
    container_name: consul
    command: ["agent", "-dev", "-client", "0.0.0.0"]
    ports:
      - "8500:8500"
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/agent/self"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - ./consul/config:/consul/config
      - ./consul/data/config.yaml:/config/config.yaml
      - ./consul/entrypoint.sh:/entrypoint.sh
    entrypoint: /entrypoint.sh

  exchange-api:
    build:
      context: ./exchange
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    depends_on:
      keycloak:
        condition: service_healthy
      consul:
        condition: service_healthy

  exchange-generator:
    build:
      context: ./exchange-generator
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    depends_on:
      keycloak:
        condition: service_healthy
      consul:
        condition: service_healthy

  notifications:
    build:
      context: ./notifications
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    depends_on:
      keycloak:
        condition: service_healthy
      consul:
        condition: service_healthy

  blocker:
    build:
      context: ./blocker
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    depends_on:
      keycloak:
        condition: service_healthy
      consul:
        condition: service_healthy

  accounts:
    build:
      context: ./accounts
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    depends_on:
      keycloak:
        condition: service_healthy
      consul:
        condition: service_healthy

  cash:
    build:
      context: ./cash
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    depends_on:
      keycloak:
        condition: service_healthy
      consul:
        condition: service_healthy

  transfer:
    build:
      context: ./transfer
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    depends_on:
      keycloak:
        condition: service_healthy
      consul:
        condition: service_healthy

  front-ui:
    build:
      context: ./front-ui
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/bank
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
    depends_on:
      keycloak:
        condition: service_healthy
      consul:
        condition: service_healthy